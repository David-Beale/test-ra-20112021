{"version":3,"sources":["Api/MarvelApi.js","redux/comics.js","redux/favourites.js","redux/store.js","Components/Content/Hooks/useFetchComics.js","Components/Content/ContentStyle.js","Components/Content/Components/Card/CardStyle.js","Components/Content/Components/Card/Card.js","Components/Content/Content.js","Assets/images/remove.svg","Components/Favourites Panel/Components/FavouritesContent/Components/FavouriteStyle.js","Components/Favourites Panel/Components/FavouritesContent/Components/Favourite.js","Components/Favourites Panel/Components/FavouritesContent/FavouritesContentStyle.js","Components/Favourites Panel/Components/FavouritesContent/FavouriteContent.js","Assets/images/close.svg","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeaderStyle.js","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeader.js","Components/Favourites Panel/FavouritesPanelStyle.js","Components/Favourites Panel/FavouritesPanel.js","Assets/images/star.svg","Components/Header/HeaderStyle.js","Components/Header/Header.js","App.js","index.js"],"names":["MarvelApi","fetchComics","a","fetch","res","status","error","json","body","comics","data","results","console","log","comicsAdapter","createEntityAdapter","initialState","getInitialState","loading","createSlice","name","reducers","addComics","state","action","addMany","payload","setLoading","setError","actions","getSelectors","selectComicById","selectById","selectComicsIds","selectIds","favouritesAdapter","open","favourites","toggleOpen","addFavourite","addOne","removeFavourite","removeOne","selectFavouriteById","selectFavouriteIds","configureStore","reducer","useFetchComics","dispatch","useDispatch","useEffect","ContentContainer","styled","main","ComicsList","ul","CardContainer","li","ComicCard","div","Image","img","Title","h2","Button","button","Card","comicId","comic","useSelector","favourite","src","thumbnail","path","alt","title","onClick","id","Content","comicIds","map","FavouriteContainer","RemoveButton","remove","Favourite","favouriteId","FavouritesList","FavouritesContent","favouriteIds","HeaderContainer","CloseButton","close","FavouritesHeader","FavouritesPanelContainer","FavouritesPanel","header","SiteHeading","h1","star","Header","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"0QAAaA,EAAb,kCAAaA,EACJC,Y,sBAAc,8BAAAC,EAAA,4DAEjB,sIAFiB,kBAICC,MAFlB,uIAFiB,aAIXC,EAJW,QAKTC,QAAU,KALD,yCAKa,CAAEC,MAAOF,EAAIC,SAL1B,uBAMED,EAAIG,OANN,cAMXC,EANW,yBAOV,CAAEC,OAAQD,EAAKE,KAAKC,UAPV,yCASjBC,QAAQC,IAAR,MATiB,kBAUV,CAAEP,MAAK,OAVG,0DCEvB,I,cAAMQ,EAAgBC,cAETC,EAAeF,EAAcG,gBAAgB,CACxDC,SAAS,EACTZ,OAAO,IAGHG,EAASU,YAAY,CACzBC,KAAM,SACNJ,eACAK,SAAU,CACRC,UADQ,SACEC,EAAOC,GACfV,EAAcW,QAAQF,EAAOC,EAAOE,UAEtCC,WAJQ,SAIGJ,EAAOC,GAChBD,EAAML,QAAUM,EAAOE,SAEzBE,SAPQ,SAOCL,GACPA,EAAMjB,OAAQ,MAKb,EAA4CG,EAAOoB,QAA3CP,EAAR,EAAQA,UAAWM,EAAnB,EAAmBA,SAAUD,EAA7B,EAA6BA,WAE7B,EACLb,EAAcgB,cAAa,SAACP,GAAD,OAAWA,EAAMd,UADnBsB,EAApB,EAAQC,WAAwCC,EAAhD,EAAqCC,UAG7BzB,IAAf,QC7BM0B,EAAoBpB,cAEbC,EAAemB,EAAkBlB,gBAAgB,CAC5DmB,MAAM,IAGFC,EAAalB,YAAY,CAC7BC,KAAM,aACNJ,eACAK,SAAU,CACRiB,WADQ,SACGf,GACTA,EAAMa,MAAQb,EAAMa,MAEtBG,aAJQ,SAIKhB,EAAOC,GAClBW,EAAkBK,OAAOjB,EAAOC,EAAOE,UAEzCe,gBAPQ,SAOQlB,EAAOC,GACrBW,EAAkBO,UAAUnB,EAAOC,EAAOE,aAKzC,EAAsDW,EAAWR,QAAzDS,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAAcE,EAAlC,EAAkCA,gBAElC,EAGHN,EAAkBL,cAAa,SAACP,GAAD,OAAWA,EAAMc,cAFtCM,EADP,EACLX,WACWY,EAFN,EAELV,UAGaG,IAAf,QC1BeQ,cAAe,CAC5BC,QAAS,CACPrC,SACA4B,gBCJSU,EAAiB,WAC5B,IAAMC,EAAWC,cACjBC,qBAAU,WACRF,EH0BuB,uCAAM,WAAOA,GAAP,iBAAA9C,EAAA,6DAC/B8C,EAASrB,GAAW,IADW,SAEC3B,EAAUC,cAFX,mBAEvBQ,EAFuB,EAEvBA,QAFuB,EAEfH,MAFe,uBAI7B0C,EAASpB,GAJoB,0BAO/BoB,EAASrB,GAAW,IACpBqB,EAAS1B,EAAUb,IARY,4CAAN,yDGzBtB,CAACuC,K,cCNOG,EAAmBC,IAAOC,KAAV,wFAKhBC,EAAaF,IAAOG,GAAV,2GCLVC,EAAgBJ,IAAOK,GAAV,mJAQbC,EAAYN,IAAOO,IAAV,iKAQTC,EAAQR,IAAOS,IAAV,4CAILC,EAAQV,IAAOW,GAAV,0NAWLC,EAASZ,IAAOa,OAAV,mO,QCxBJ,SAASC,GAAT,GAA4B,IAAZC,EAAW,EAAXA,QACvBnB,EAAWC,cAEXmB,EAAQC,aAAY,SAAC9C,GAAD,OAAWQ,EAAgBR,EAAO4C,MACtDG,EAAYD,aAAY,SAAC9C,GAAD,OAAWoB,EAAoBpB,EAAO4C,MAYpE,OACE,eAACX,EAAD,UACE,gBAACE,EAAD,WACE,eAACE,EAAD,CACEW,IAAG,UAAKH,EAAMI,UAAUC,KAArB,yBACHC,IAAG,UAAKN,EAAMO,MAAX,YAEL,eAACb,EAAD,UAAQM,EAAMO,QACd,eAACX,EAAD,CAAQY,QAlBE,WACd,GAAIN,EAAWtB,EAASP,EAAgB0B,QACnC,CACH,IAAMzC,EAAU,CACdmD,GAAIT,EAAMS,GACVF,MAAOP,EAAMO,OAEf3B,EAAST,EAAab,MAWpB,mBACO4C,EAAuB,cAAX,SADnB,sBCxBO,SAASQ,KACtB/B,IACA,IAAMgC,EAAWV,YAAYpC,GAE7B,OACE,eAACkB,EAAD,UACE,eAACG,EAAD,UACGyB,EAASC,KAAI,SAACb,GAAD,OACZ,eAACD,GAAD,CAAoBC,QAASA,GAAlBA,UCjBN,I,eAAA,OAA0B,mCCG5Bc,GAAqB7B,IAAOK,GAAV,2HAQlByB,IAFQ9B,IAAOO,IAAV,4BAEUP,IAAOa,OAAV,0OAOLkB,KCVL,SAASC,GAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAC5BrC,EAAWC,cACXqB,EAAYD,aAAY,SAAC9C,GAAD,OAC5BoB,EAAoBpB,EAAO8D,MAM7B,OACE,gBAACJ,GAAD,WACE,eAACnB,EAAD,UAAQQ,EAAUK,QAClB,eAACO,GAAD,CAAcN,QAPF,WACd5B,EAASP,EAAgB4C,UCZtB,IAAMlC,GAAmBC,IAAOO,IAAV,4BAChB2B,GAAiBlC,IAAOG,GAAV,wFCEZ,SAASgC,KACtB,IAAMC,EAAenB,YAAYzB,GAEjC,OACE,eAAC,GAAD,UACE,eAAC0C,GAAD,UACGE,EAAaR,KAAI,SAACK,GAAD,OAChB,eAACD,GAAD,CAA6BC,YAAaA,GAA1BA,UCZX,I,YAAA,OAA0B,kCCG5BI,GAAkBrC,IAAOO,IAAV,2JASfG,GAAQV,IAAOW,GAAV,mHAML2B,GAActC,IAAOa,OAAV,8PASJ0B,ICvBL,SAASC,KACtB,IAAM5C,EAAWC,cAKjB,OACE,gBAACwC,GAAD,WACE,eAAC,GAAD,yBACA,eAACC,GAAD,CAAad,QAND,WACd5B,EAASV,WCNN,IAAMuD,GAA2BzC,IAAOO,IAAV,yQAQX,qBAAGvB,KAAmB,EAAI,OCLrC,SAAS0D,KACtB,IAAM1D,EAAOiC,aAAY,qBAAGhC,WAA4BD,QAExD,OACE,gBAACyD,GAAD,CAA0BzD,KAAMA,EAAhC,UACE,eAACwD,GAAD,IACA,eAACL,GAAD,OCXS,I,SAAA,OAA0B,iCCG5BE,GAAkBrC,IAAO2C,OAAV,yIAOfC,GAAc5C,IAAO6C,GAAV,8PAWXjC,GAASZ,IAAOa,OAAV,8PASCiC,IC1BL,SAASC,KACtB,IAAMnD,EAAWC,cAKjB,OACE,gBAAC,GAAD,WACE,eAAC+C,GAAD,6BACA,eAAC,GAAD,CAAQpB,QANI,WACd5B,EAASV,WCJE,SAAS8D,KACtB,OACE,uCACE,eAACD,GAAD,IACA,eAACrB,GAAD,IACA,eAACgB,GAAD,OCANO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,eAACJ,GAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.db5473da.chunk.js","sourcesContent":["export class MarvelApi {\r\n  static fetchComics = async () => {\r\n    const url =\r\n      \"https://gateway.marvel.com/v1/public/comics?apikey=3cb62d086d5debdeea139095cbb07fe4&ts=redant&hash=140e85a50884cef76d614f6dacada288\";\r\n    try {\r\n      const res = await fetch(url);\r\n      if (res.status >= 400) return { error: res.status };\r\n      const body = await res.json();\r\n      return { comics: body.data.results };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return { error };\r\n    }\r\n  };\r\n}\r\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { MarvelApi } from \"../Api/MarvelApi\";\r\n\r\nconst comicsAdapter = createEntityAdapter();\r\n\r\nexport const initialState = comicsAdapter.getInitialState({\r\n  loading: false,\r\n  error: false,\r\n});\r\n\r\nconst comics = createSlice({\r\n  name: \"comics\",\r\n  initialState,\r\n  reducers: {\r\n    addComics(state, action) {\r\n      comicsAdapter.addMany(state, action.payload);\r\n    },\r\n    setLoading(state, action) {\r\n      state.loading = action.payload;\r\n    },\r\n    setError(state) {\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addComics, setError, setLoading } = comics.actions;\r\n\r\nexport const { selectById: selectComicById, selectIds: selectComicsIds } =\r\n  comicsAdapter.getSelectors((state) => state.comics);\r\n\r\nexport default comics.reducer;\r\n\r\nexport const fetchComics = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  const { comics, error } = await MarvelApi.fetchComics();\r\n  if (error) {\r\n    dispatch(setError);\r\n    return;\r\n  }\r\n  dispatch(setLoading(false));\r\n  dispatch(addComics(comics));\r\n};\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst favouritesAdapter = createEntityAdapter();\r\n\r\nexport const initialState = favouritesAdapter.getInitialState({\r\n  open: false,\r\n});\r\n\r\nconst favourites = createSlice({\r\n  name: \"favourites\",\r\n  initialState,\r\n  reducers: {\r\n    toggleOpen(state) {\r\n      state.open = !state.open;\r\n    },\r\n    addFavourite(state, action) {\r\n      favouritesAdapter.addOne(state, action.payload);\r\n    },\r\n    removeFavourite(state, action) {\r\n      favouritesAdapter.removeOne(state, action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleOpen, addFavourite, removeFavourite } = favourites.actions;\r\n\r\nexport const {\r\n  selectById: selectFavouriteById,\r\n  selectIds: selectFavouriteIds,\r\n} = favouritesAdapter.getSelectors((state) => state.favourites);\r\n\r\nexport default favourites.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport comics from \"./comics\";\r\nimport favourites from \"./favourites\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    comics,\r\n    favourites,\r\n  },\r\n});\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchComics } from \"../../../redux/comics\";\r\n\r\nexport const useFetchComics = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchComics());\r\n  }, [dispatch]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentContainer = styled.main`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 10px 0;\r\n`;\r\nexport const ComicsList = styled.ul`\r\n  list-style: outside none;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardContainer = styled.li`\r\n  float: left;\r\n  padding: 10px;\r\n  width: 100%;\r\n  @media only screen and (min-width: 480px) {\r\n    width: 50%;\r\n  }\r\n`;\r\nexport const ComicCard = styled.div`\r\n  background: #fff;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.15);\r\n  text-align: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  @media only screen and (min-width: 480px) {\r\n    width: 100%;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n  border: 0;\r\n  background: #575757;\r\n  &:active,\r\n  &:focus,\r\n  &:hover {\r\n    background: #464646;\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectComicById } from \"../../../../redux/comics\";\r\nimport {\r\n  addFavourite,\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../redux/favourites\";\r\nimport { Button, CardContainer, ComicCard, Image, Title } from \"./CardStyle\";\r\n\r\nexport default function Card({ comicId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const comic = useSelector((state) => selectComicById(state, comicId));\r\n  const favourite = useSelector((state) => selectFavouriteById(state, comicId));\r\n\r\n  const onClick = () => {\r\n    if (favourite) dispatch(removeFavourite(comicId));\r\n    else {\r\n      const payload = {\r\n        id: comic.id,\r\n        title: comic.title,\r\n      };\r\n      dispatch(addFavourite(payload));\r\n    }\r\n  };\r\n  return (\r\n    <CardContainer>\r\n      <ComicCard>\r\n        <Image\r\n          src={`${comic.thumbnail.path}/portrait_uncanny.jpg`}\r\n          alt={`${comic.title} image`}\r\n        />\r\n        <Title>{comic.title}</Title>\r\n        <Button onClick={onClick}>\r\n          {`${!favourite ? \"Add to\" : \"Remove from\"} favourites`}\r\n        </Button>\r\n      </ComicCard>\r\n    </CardContainer>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectComicsIds } from \"../../redux/comics\";\r\n\r\nimport { useFetchComics } from \"./Hooks/useFetchComics\";\r\n\r\nimport { ComicsList, ContentContainer } from \"./ContentStyle\";\r\n\r\nimport Card from \"./Components/Card/Card\";\r\n\r\nexport default function Content() {\r\n  useFetchComics();\r\n  const comicIds = useSelector(selectComicsIds);\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <ComicsList>\r\n        {comicIds.map((comicId) => (\r\n          <Card key={comicId} comicId={comicId} />\r\n        ))}\r\n      </ComicsList>\r\n    </ContentContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/remove.17b04ae8.svg\";","import styled from \"styled-components\";\r\nimport remove from \"../../../../../Assets/images/remove.svg\";\r\n\r\nexport const FavouriteContainer = styled.li`\r\n  padding: 15px 50px 15px 15px;\r\n  border-bottom: 1px solid #eaeaea;\r\n  position: relative;\r\n`;\r\n\r\nexport const Title = styled.div``;\r\n\r\nexport const RemoveButton = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 5px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-top: -16px;\r\n  background: url(${remove}) 50% 50% no-repeat;\r\n  background-size: 50%;\r\n  border: 0;\r\n  opacity: 0.2;\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../../redux/favourites\";\r\nimport { Title } from \"../../../../Content/Components/Card/CardStyle\";\r\nimport { FavouriteContainer, RemoveButton } from \"./FavouriteStyle\";\r\n\r\nexport default function Favourite({ favouriteId }) {\r\n  const dispatch = useDispatch();\r\n  const favourite = useSelector((state) =>\r\n    selectFavouriteById(state, favouriteId)\r\n  );\r\n  const onClick = () => {\r\n    dispatch(removeFavourite(favouriteId));\r\n  };\r\n\r\n  return (\r\n    <FavouriteContainer>\r\n      <Title>{favourite.title}</Title>\r\n      <RemoveButton onClick={onClick} />\r\n    </FavouriteContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentContainer = styled.div``;\r\nexport const FavouritesList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: outside none;\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectFavouriteIds } from \"../../../../redux/favourites\";\r\nimport Favourite from \"./Components/Favourite\";\r\nimport { ContentContainer, FavouritesList } from \"./FavouritesContentStyle\";\r\n\r\nexport default function FavouritesContent() {\r\n  const favouriteIds = useSelector(selectFavouriteIds);\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <FavouritesList>\r\n        {favouriteIds.map((favouriteId) => (\r\n          <Favourite key={favouriteId} favouriteId={favouriteId} />\r\n        ))}\r\n      </FavouritesList>\r\n    </ContentContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.171f6ebe.svg\";","import styled from \"styled-components\";\r\nimport close from \"../../../../Assets/images/close.svg\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 64px;\r\n  background: #575757;\r\n  color: #fff;\r\n  text-align: center;\r\n  line-height: 64px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -18px;\r\n  right: 20px;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 3px solid #fff;\r\n  border-radius: 50%;\r\n  background: url(${close}) 50% 50% no-repeat;\r\n  background-size: 45%;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { toggleOpen } from \"../../../../redux/favourites\";\r\nimport { CloseButton, HeaderContainer, Title } from \"./FavouritesHeaderStyle\";\r\n\r\nexport default function FavouritesHeader() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(toggleOpen());\r\n  };\r\n  return (\r\n    <HeaderContainer>\r\n      <Title>Favourites</Title>\r\n      <CloseButton onClick={onClick} />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavouritesPanelContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 320px;\r\n  background: #fff;\r\n  transform: translatex(${({ open }) => (open ? 0 : 100)}%);\r\n  -webkit-transition: all 0.25s ease-in-out;\r\n  transition: all 0.25s ease-in-out;\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport FavouritesContent from \"./Components/FavouritesContent/FavouriteContent\";\r\nimport FavouritesHeader from \"./Components/FavouritesHeader/FavouritesHeader\";\r\nimport { FavouritesPanelContainer } from \"./FavouritesPanelStyle\";\r\n\r\nexport default function FavouritesPanel() {\r\n  const open = useSelector(({ favourites }) => favourites.open);\r\n\r\n  return (\r\n    <FavouritesPanelContainer open={open}>\r\n      <FavouritesHeader />\r\n      <FavouritesContent />\r\n    </FavouritesPanelContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/star.454f890b.svg\";","import styled from \"styled-components\";\r\nimport star from \"../../Assets/images/star.svg\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  background: #ec1c23;\r\n  text-align: center;\r\n  padding: 0 40px;\r\n  position: relative;\r\n  height: 64px;\r\n`;\r\nexport const SiteHeading = styled.h1`\r\n  margin: 0;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\r\n  font-size: 21px;\r\n  line-height: 64px;\r\n  @media only screen and (min-width: 480px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -18px;\r\n  right: 20px;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 3px solid #fff;\r\n  border-radius: 50%;\r\n  background: url(${star}) 50% 50% no-repeat;\r\n  background-size: 60%;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { toggleOpen } from \"../../redux/favourites\";\r\nimport { Button, HeaderContainer, SiteHeading } from \"./HeaderStyle\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(toggleOpen());\r\n  };\r\n  return (\r\n    <HeaderContainer>\r\n      <SiteHeading>Red Ant Comics</SiteHeading>\r\n      <Button onClick={onClick} />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import Content from \"./Components/Content/Content\";\nimport FavouritesPanel from \"./Components/Favourites Panel/FavouritesPanel\";\nimport Header from \"./Components/Header/Header\";\n\nexport default function App() {\n  return (\n    <>\n      <Header />\n      <Content />\n      <FavouritesPanel />\n    </>\n  );\n}\n","import \"./index.css\";\nimport \"./normalize.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}